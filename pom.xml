<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>foo</groupId>
	<artifactId>docker-compose-with-docker-for-it-tests</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<description>
	Demonstrates usage of docker-compose-maven-plugin with postgres in integration tests. 
	The idea is to start docker-compose with postgresql before integration tests and call docker-compose down after.
	Usage:
	mvn clean verify
	
	Note:
	Postgresql may not be able to start soon enough, make sure to specify loginTimeout in a connection parameters
	</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>com.dkanejs.maven.plugins</groupId>
				<artifactId>docker-compose-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>docker-compose-up</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>up</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<detachedMode>true</detachedMode>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-down</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>down</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<removeVolumes>true</removeVolumes>
							<removeOrphans>true</removeOrphans>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ru.yandex.qatools.embed</groupId>
			<artifactId>postgresql-embedded</artifactId>
			<version>2.9</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
</project>